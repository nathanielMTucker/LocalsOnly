{"version":3,"sources":["Components/Address.jsx","Components/Hours.jsx","Pages/NewLocal.jsx"],"names":["Address","address","onChange","setAddress","className","htmlFor","Input","id","type","placeholder","name","value","street","required","apt","city","pattern","state","zip","maxLength","Hours","day","d","a","toLowerCase","React","useState","enabled","setEnabled","useEffect","closed","disabled","from","to","Dollar","Rating","hours","compose","withFirebase","withUser","history","user","isLoading","setIsLoading","monday","tuesday","wednesday","thursday","friday","saturday","sunday","days","setDays","tel","web","description","rating","price","tags","dinein","takeout","delivery","family","adult","dog","localsOnly","details","setDetails","checkGeo","useCallback","axios","get","fromAddress","then","data","results","location","geometry","console","log","coors","res","catch","err","error","onChangeAddress","e","preventDefault","target","onChangeHours","split","op","checked","prev","charCount","setCharCount","length","onChangeDetails","onCheck","check","onSubmit","isLocalToCity","alert","post","owner","getID","toString","push","_id","style","marginBottom","method","encType","input","replace","substring","middle","last","maxlength","rows","cols","icon"],"mappings":"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","file":"static/js/12.7887ad59.chunk.js","sourcesContent":["import React from 'react'\r\n// import {STATES} from '../globals';\r\nimport Input, {StateInitialInput} from './Input';\r\n\r\nconst Address = ({address, setAddress, onChange})=>{\r\n    \r\n\r\n\r\n    return (\r\n         <form>\r\n            <label className=\"label has-text-grey\" htmlFor=\"street\">\r\n                Street *\r\n            </label>\r\n            <Input>\r\n                <input id=\"street\" className=\"input\" type=\"text\" placeholder=\"100 Main St.\" name=\"street\" value={address.street} onChange={onChange} required/>\r\n            </Input>\r\n\r\n            <label className=\"label has-text-grey\" htmlFor=\"apt\">\r\n                Apartment\r\n            </label>\r\n            <Input>\r\n                <input id=\"apt\" className=\"input\" type=\"text\" placeholder=\"123\" name=\"apt\" value={address.apt} onChange={onChange}/>\r\n            </Input>\r\n\r\n            <label className=\"label has-text-grey\" htmlFor=\"city\">\r\n                City *\r\n            </label>\r\n            <Input>\r\n                <input id=\"city\" className=\"input\" type=\"text\" placeholder=\"Tempe\" name=\"city\" value={address.city} onChange={onChange} pattern=\"^([a-zA-Z-\\s]+)$\" required/>\r\n            </Input>\r\n\r\n            <div className=\"columns\">\r\n                <div className=\"column\">\r\n\r\n                    <label className=\"label has-text-grey\" htmlFor=\"state-initial-input\">\r\n                        State *\r\n                    </label>\r\n                    <StateInitialInput onChange={onChange} value={address.state}/>\r\n                </div>\r\n                <div className=\"column\">\r\n\r\n                    <label className=\"label has-text-grey\" htmlFor=\"zip\">\r\n                       Zip Code *\r\n                    </label>\r\n                    <Input>\r\n                        <input id=\"zip\" className=\"input\" type=\"text\" placeholder=\"85281\" name=\"zip\" value={address.zip} onChange={onChange} maxLength={5} pattern=\"([0-9]{5})\" required/>\r\n                    </Input>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Address;","import React from 'react'\r\n\r\nlet Hours = ({day, d, onChange}) => {\r\n    \r\n    const a = day.toLowerCase();\r\n    const [enabled, setEnabled] = React.useState(false);\r\n\r\n    React.useEffect(()=>{\r\n        setEnabled(d.closed);\r\n    },[d.closed])\r\n    \r\n    return (\r\n        <label className=\"label has-text-grey\">\r\n            {day}\r\n            <div className=\"control\">\r\n                <div className=\"columns\">\r\n                    <div className=\"column\">\r\n                        <input type=\"time\" disabled={enabled} name={`${a}.from`} className=\"input\" onChange={onChange} value={d.from}/>\r\n                        <small className=\"help\">\r\n                            <label className=\"label\">\r\n                                closed? <input onChange={onChange} name={`${a}.closed`}  type=\"checkbox\" className=\"checkbox\"/>\r\n                            </label>\r\n                        </small>\r\n                    </div>\r\n                    <div className=\"column is-1\">to</div>\r\n                    <div className=\"column\">\r\n                        <input type=\"time\" disabled={enabled} name={`${a}.to`} className=\"input\" onChange={onChange} value={d.to}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Hours\r\n","import React, {useState, useEffect, useCallback} from 'react'\r\nimport {withFirebase} from '../Authentication';\r\nimport axios from 'axios';\r\nimport {fromAddress} from '../globals';\r\nimport {withUser} from '../User';\r\nimport {compose} from 'recompose';\r\nimport Address from \"../Components/Address\";\r\nimport Hours from '../Components/Hours';\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport 'react-tagsinput/react-tagsinput.css'\r\n\r\nconst Dollar = Rating;\r\nconst hours = {\r\n        from: '',\r\n        to: '',\r\n        closed: false\r\n    }\r\nconst NewLocal = ({history, user }) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [days, setDays] = useState({\r\n        monday:hours,\r\n        tuesday:hours,\r\n        wednesday:hours,\r\n        thursday:hours,\r\n        friday:hours,\r\n        saturday:hours,\r\n        sunday:hours,\r\n    })\r\n    const [address, setAddress] = useState({\r\n        name:'',\r\n        street:'',\r\n        apt:'',\r\n        city:'',\r\n        state:'',\r\n        zip:'',\r\n        tel:'',\r\n        web:'',\r\n    });\r\n    const [details, setDetails] = useState({\r\n        description:'',\r\n        rating:1,\r\n        price:1,\r\n        tags:[],\r\n        dinein:false,\r\n        takeout:false,\r\n        delivery:false,\r\n        family:false,\r\n        adult:false,\r\n        dog:false,\r\n        localsOnly:false\r\n    })\r\n\r\n    const checkGeo = useCallback(async ()=>{\r\n        await axios.get(fromAddress(address))\r\n        .then(async ({data: {results : [{geometry : { location}}]}\r\n            })=>{\r\n                console.log(location);\r\n                axios.get(`/api/v1/local`,{\r\n                    address:address,\r\n                    coors:location\r\n                })\r\n                .then(res=>{\r\n                \r\n                })\r\n                .catch(err=>console.error(`From Server: ${err}`))\r\n            })\r\n    },[address])\r\n    useEffect(()=>{\r\n        const {street, city, state, zip} = address;\r\n        if(street && city && state && zip){\r\n            checkGeo()\r\n        }\r\n    },[address, checkGeo])\r\n\r\n    const onChangeAddress = e =>{\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setAddress({...address, [name]:value});\r\n        \r\n    }\r\n    const onPhone = e =>{\r\n        const target = e.target;\r\n        const input = e.target.value.replace(/\\D/g,'').substring(0,10);\r\n        const zip = input.substring(0,3);\r\n        const middle = input.substring(3,6);\r\n        const last = input.substring(6,10);\r\n\r\n        if(input.length > 6){target.value = `(${zip}) ${middle} - ${last}`;}\r\n        else if(input.length > 3){target.value = `(${zip}) ${middle}`;}\r\n        else if(input.length > 0){target.value = `(${zip}`;}\r\n\r\n        setAddress({...address, [target.name]:target.value});\r\n    }\r\n    const onChangeHours = e =>{\r\n        const [day,op] = e.target.name.split('.');\r\n        const value = op === 'closed' ? e.target.checked : e.target.value;\r\n        \r\n        const prev = days[day];\r\n        setDays({...days, [day]:{\r\n            ...prev,\r\n            [op]:value\r\n        }})\r\n        \r\n        \r\n    }\r\n\r\n    let {description, rating, price, tags} = details\r\n    const [charCount, setCharCount] = useState(150);\r\n\r\n    React.useEffect(() => {\r\n        setCharCount(150-description.length)\r\n    }, [description, tags])\r\n\r\n    const onChangeDetails = e=>{\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setDetails({...details, [name]:value})\r\n    }\r\n    const onCheck = e =>{\r\n        const name = e.target.name;\r\n        const check = e.target.checked;\r\n        setDetails({...details, [name]:check})\r\n    }\r\n    const onSubmit = async e =>{\r\n        e.preventDefault();\r\n       setIsLoading(true);\r\n        \r\n        \r\n        if(user.isLocalToCity(address.state.toLowerCase(), address.city.toLowerCase())){\r\n            alert(\"You can only post if you are local to the area.\");\r\n            return;\r\n        }\r\n        \r\n        await axios.get(fromAddress(address))\r\n        .then(async ({data: {results : [{geometry : { location}}]}\r\n            })=>{\r\n                console.log(location);\r\n                axios.post(`/api/v1/local`,{\r\n                    owner : user.getID().toString(),\r\n                    address:address,\r\n                    details:details,\r\n                    hours:days,\r\n                    coors:location\r\n                })\r\n                .then(res=>{\r\n                \r\n                    alert(\"Thank You!\");\r\n                    history.push(`local?id=${res.data._id}`);\r\n                })\r\n                .catch(err=>console.error(`From Server: ${err}`))\r\n            })\r\n        .catch(\r\n            err=>{\r\n                if(err===\"TypeError: res.data.results[0] is undefined\"){\r\n                    alert(\"Check that address is correct\")\r\n                }\r\n                else{\r\n                    console.error(err);\r\n                }\r\n        })\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <main id=\"new-local-page\" className=\"section columns is-centered\" style={{marginBottom:\"-2.75rem\"}}>\r\n            <div className=\"column is-half\">\r\n                <h1 className=\"title has-text-centered\">\r\n                    Create New Local\r\n                </h1>\r\n                <div className=\"mb-1\">\r\n                    * required\r\n                </div>\r\n                <div className=\"\">\r\n                    <form method=\"POST\" encType=\"multipart/form-data\" onSubmit={onSubmit} className=\"form\">\r\n                        <label htmlFor=\"businessName\" className=\"label has-text-grey\">\r\n                            Business/Location Name *\r\n                        </label>\r\n                        <div className=\"control\">\r\n                            <input id=\"businessName\" onChange={onChangeAddress} type=\"text\" name=\"name\" value={address.name} className=\"input\" required/>\r\n                        </div>\r\n                        <Address address={address} setAddress={setAddress} onChange={onChangeAddress}/>\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <label htmlFor=\"tel\" className=\"label has-text-grey\">Phone Number</label>\r\n                                <input type=\"tel\" value={address.tel} onChange={onPhone} name=\"tel\" className='input' id=\"tel\" maxlength={16}/>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <label htmlFor=\"web\" className=\"label has-text-grey\">\r\n                                    Website\r\n                                </label>\r\n                                <input id=\"web\" type=\"website\" className=\"input\" name=\"web\" value={address.web} onChange={onChangeAddress}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"columns\">\r\n                            <div className=\"column is-centered pr-2\">\r\n                                <Hours day=\"Monday\" d={days.monday} onChange={onChangeHours}/>\r\n                                <Hours day=\"Wednesday\" d={days.wednesday} onChange={onChangeHours}/>\r\n                                <Hours day=\"Friday\" d={days.friday} onChange={onChangeHours}/>\r\n                                <Hours day=\"Sunday\" d={days.sunday} onChange={onChangeHours}/>\r\n                            </div>\r\n                            <div className=\"column pl-2\">\r\n                                <Hours day=\"Tuesday\" d={days.tuesday} onChange={onChangeHours}/>\r\n                                <Hours day=\"Thursday\" d={days.thursday} onChange={onChangeHours}/>\r\n                                <Hours day=\"Saturday\" d={days.saturday} onChange={onChangeHours}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"columns\">\r\n                            <div className=\"column\">\r\n                                <label className=\"label has-text-grey\">\r\n                                    Description *\r\n                                    <div className=\"control\">\r\n                                        <textarea \r\n                                            value={description} onChange={onChangeDetails} \r\n                                            maxLength='150' rows='3' \r\n                                            className=\"textarea\" name=\"description\" \r\n                                            id=\"description\" cols=\"30\" required\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"level\">\r\n                                        <div className=\"level-left\"></div>\r\n                                        <div className=\"level-right\">\r\n                                            <div className=\"level-item\">\r\n                                                <small className=\"help\">{`${charCount} characters remaining`}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </label>\r\n                                <label className=\"label has-text-grey\">\r\n                                    Locals Only: <input onChange={onCheck} name=\"localsOnly\" type=\"checkbox\"/>\r\n                                    <small className=\"help has-text-info\">\r\n                                        Place will <strong><u className=\"has-text-info\">only</u></strong> be viewed by locals\r\n                                    </small>\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"column\">\r\n                                <label className=\"label has-text-grey\">\r\n                                    Rating\r\n                                    <div className=\"control\">\r\n                                        <Rating name=\"rating\" value={rating} onChange={onChangeDetails}/>\r\n                                    </div>\r\n                                </label>\r\n                                <label className=\"label has-text-grey\">Price\r\n                                    <div className=\"control\">\r\n                                        <Dollar name=\"price\" value={price} onChange={onChangeDetails} icon={<i className=\"fas fa-dollar-sign\"></i>}/>\r\n                                    </div>\r\n                                </label>\r\n                                <label className=\"label has-text-grey\">\r\n                                    Amenities\r\n                                    <div className=\"columns\">\r\n                                        <div className=\"column\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <label className=\"label\">\r\n                                                        Dine-In: <input onChange={onCheck} name=\"dinein\" type=\"checkbox\" className=\"checkbox\"/>\r\n                                                    </label>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label className=\"label\">\r\n                                                        Take-Out: <input onChange={onCheck} name=\"takeout\" type=\"checkbox\" className=\"checkbox\"/>\r\n                                                    </label>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label className=\"label\">\r\n                                                        Delivery: <input onChange={onCheck} name=\"delivery\" type=\"checkbox\" className=\"checkbox\"/>\r\n                                                    </label>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"column\">\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <label className=\"label\">\r\n                                                        Family Friendly: <input onChange={onCheck} name=\"family\" type=\"checkbox\" className=\"checkbox\"/>\r\n                                                    </label>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label className=\"label\">\r\n                                                        21+: <input onChange={onCheck} name=\"adult\" type=\"checkbox\" className=\"checkbox\"/>\r\n                                                    </label>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <label className=\"label\">\r\n                                                        Dog Friendly: <input onChange={onCheck} name=\"dog\" type=\"checkbox\" className=\"checkbox\"/>\r\n                                                    </label>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"level\">\r\n                            {/* <div className=\"level-left\"></div> */}\r\n                            {/* <div className=\"level-right\"> */}\r\n                                <button type=\"submit\" className={`button is-info level-item is-medium ${isLoading && \"is-loading\"}`}>Submit</button>\r\n                            {/* </div> */}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default compose(withFirebase, withUser)(NewLocal);\r\n"],"sourceRoot":""}