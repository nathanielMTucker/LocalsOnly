{"ast":null,"code":"var util = require('util'),\n    OpenStreetMapGeocoder = require('./openstreetmapgeocoder');\n/**\n * Constructor\n */\n\n\nvar PickPointGeocoder = function PickPointGeocoder(httpAdapter, options) {\n  PickPointGeocoder.super_.call(this, httpAdapter, options);\n\n  if (!httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n\n  if (!this.options.apiKey || this.options.apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.options.key = this.options.apiKey;\n};\n\nutil.inherits(PickPointGeocoder, OpenStreetMapGeocoder);\nPickPointGeocoder.prototype._endpoint = 'https://api.pickpoint.io/v1/forward';\nPickPointGeocoder.prototype._endpoint_reverse = 'https://api.pickpoint.io/v1/reverse';\nmodule.exports = PickPointGeocoder;","map":{"version":3,"sources":["C:/Users/nmtuc/Desktop/Dev/web/localsonly/frontend/node_modules/node-geocoder/lib/geocoder/pickpointgeocoder.js"],"names":["util","require","OpenStreetMapGeocoder","PickPointGeocoder","httpAdapter","options","super_","call","supportsHttps","Error","apiKey","constructor","name","key","inherits","prototype","_endpoint","_endpoint_reverse","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAoBC,OAAO,CAAC,MAAD,CAAnC;AAAA,IACEC,qBAAqB,GAAKD,OAAO,CAAC,yBAAD,CADnC;AAGA;;;;;AAGA,IAAIE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,WAA3B,EAAwCC,OAAxC,EAAiD;AACvEF,EAAAA,iBAAiB,CAACG,MAAlB,CAAyBC,IAAzB,CAA8B,IAA9B,EAAoCH,WAApC,EAAiDC,OAAjD;;AAEA,MAAI,CAACD,WAAW,CAACI,aAAZ,EAAL,EAAkC;AAChC,UAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACD;;AAED,MAAI,CAAC,KAAKJ,OAAL,CAAaK,MAAd,IAAwB,KAAKL,OAAL,CAAaK,MAAb,IAAuB,WAAnD,EAAgE;AAC9D,UAAM,IAAID,KAAJ,CAAU,KAAKE,WAAL,CAAiBC,IAAjB,GAAwB,kBAAlC,CAAN;AACD;;AAED,OAAKP,OAAL,CAAaQ,GAAb,GAAmB,KAAKR,OAAL,CAAaK,MAAhC;AACD,CAZD;;AAcAV,IAAI,CAACc,QAAL,CAAcX,iBAAd,EAAiCD,qBAAjC;AAEAC,iBAAiB,CAACY,SAAlB,CAA4BC,SAA5B,GAAwC,qCAAxC;AACAb,iBAAiB,CAACY,SAAlB,CAA4BE,iBAA5B,GAAgD,qCAAhD;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,iBAAjB","sourcesContent":["var util                  = require('util'),\n  OpenStreetMapGeocoder   = require('./openstreetmapgeocoder');\n\n/**\n * Constructor\n */\nvar PickPointGeocoder = function PickPointGeocoder(httpAdapter, options) {\n  PickPointGeocoder.super_.call(this, httpAdapter, options);\n\n  if (!httpAdapter.supportsHttps()) {\n    throw new Error('You must use https http adapter');\n  }\n\n  if (!this.options.apiKey || this.options.apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.options.key = this.options.apiKey;\n};\n\nutil.inherits(PickPointGeocoder, OpenStreetMapGeocoder);\n\nPickPointGeocoder.prototype._endpoint = 'https://api.pickpoint.io/v1/forward';\nPickPointGeocoder.prototype._endpoint_reverse = 'https://api.pickpoint.io/v1/reverse';\n\nmodule.exports = PickPointGeocoder;\n"]},"metadata":{},"sourceType":"script"}