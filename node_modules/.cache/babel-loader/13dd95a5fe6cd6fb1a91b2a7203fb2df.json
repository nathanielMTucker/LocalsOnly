{"ast":null,"code":"var util = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n/**\n * SmartyStreets Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options\n */\n\n\nvar SmartyStreets = function SmartyStreets(httpAdapter, auth_id, auth_token) {\n  SmartyStreets.super_.call(this, httpAdapter);\n\n  if (!auth_id && !auth_token) {\n    throw new Error('You must specify an auth-id and auth-token!');\n  }\n\n  this.auth_id = auth_id;\n  this.auth_token = auth_token;\n};\n\nutil.inherits(SmartyStreets, AbstractGeocoder);\nSmartyStreets.prototype._endpoint = 'https://api.smartystreets.com/street-address';\n/**\n* Reverse geocoding\n* @param <integer>  lat      Latittude\n* @param <integer>  lng      Longitude\n* @param <function> callback Callback method\n*/\n\nSmartyStreets.prototype.reverse = function (lat, lng, callback) {\n  if (typeof this._reverse != 'function') {\n    throw new Error(this.constructor.name + ' doesnt support reverse geocoding!');\n  }\n\n  return this._reverse(lat, lng, callback);\n};\n/**\n * Format Result\n **/\n\n\nSmartyStreets.prototype._formatResult = function (result) {\n  if (result) {\n    return [{\n      'latitude': result.metadata.latitude,\n      'longitude': result.metadata.longitude,\n      'country': null,\n      'city': result.components.city_name,\n      'zipcode': result.components.zipcode,\n      'streetName': result.components.street_name + ' ' + result.components.street_suffix,\n      'streetNumber': result.components.primary_number,\n      'countryCode': null,\n      'type': result.metadata.record_type,\n      'dpv_match': result.analysis.dpv_match_code,\n      'dpv_footnotes': result.analysis.dpv_footnotes\n    }];\n  }\n};\n/**\n* Geocode\n* @param <string>   value    Value to geocode\n* @param <function> callback Callback method\n*/\n\n\nSmartyStreets.prototype.geocode = function (value, callback) {\n  var _this = this;\n\n  var params = {\n    'street': value,\n    'auth-id': this.auth_id,\n    'auth-token': this.auth_token,\n    'format': 'json'\n  };\n  this.httpAdapter.get(this._endpoint, params, function (err, result) {\n    if (err) {\n      return callback(err);\n    } else {\n      var results = [];\n      result.forEach(function (result) {\n        results.push(_this._formatResult(result));\n      });\n      results.raw = result;\n      callback(false, results);\n    }\n  });\n};\n\nmodule.exports = SmartyStreets;","map":{"version":3,"sources":["C:/Users/nmtuc/Desktop/Dev/web/localsonly/frontend/node_modules/node-geocoder/lib/geocoder/smartystreetsgeocoder.js"],"names":["util","require","AbstractGeocoder","SmartyStreets","httpAdapter","auth_id","auth_token","super_","call","Error","inherits","prototype","_endpoint","reverse","lat","lng","callback","_reverse","constructor","name","_formatResult","result","metadata","latitude","longitude","components","city_name","zipcode","street_name","street_suffix","primary_number","record_type","analysis","dpv_match_code","dpv_footnotes","geocode","value","_this","params","get","err","results","forEach","push","raw","module","exports"],"mappings":"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","sourcesContent":["var util             = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * SmartyStreets Constructor\n * @param <object> httpAdapter Http Adapter\n * @param <object> options     Options\n */\nvar SmartyStreets = function SmartyStreets(httpAdapter, auth_id, auth_token) {\n    SmartyStreets.super_.call(this, httpAdapter);\n\n    if(!auth_id && !auth_token){\n      throw new Error('You must specify an auth-id and auth-token!');\n    }\n\n    this.auth_id = auth_id;\n    this.auth_token = auth_token;\n};\n\nutil.inherits(SmartyStreets, AbstractGeocoder);\n\nSmartyStreets.prototype._endpoint = 'https://api.smartystreets.com/street-address';\n\n/**\n* Reverse geocoding\n* @param <integer>  lat      Latittude\n* @param <integer>  lng      Longitude\n* @param <function> callback Callback method\n*/\nSmartyStreets.prototype.reverse = function(lat, lng, callback) {\n    if (typeof this._reverse != 'function') {\n        throw new Error(this.constructor.name + ' doesnt support reverse geocoding!');\n    }\n\n    return this._reverse(lat, lng, callback);\n};\n\n/**\n * Format Result\n **/\nSmartyStreets.prototype._formatResult = function(result) {\n  if(result){\n      return [{\n        'latitude' : result.metadata.latitude,\n        'longitude' : result.metadata.longitude,\n        'country' : null,\n        'city' : result.components.city_name,\n        'zipcode' : result.components.zipcode,\n        'streetName' : result.components.street_name + ' ' + result.components.street_suffix,\n        'streetNumber' : result.components.primary_number,\n        'countryCode' : null,\n        'type' : result.metadata.record_type,\n        'dpv_match' : result.analysis.dpv_match_code,\n        'dpv_footnotes' : result.analysis.dpv_footnotes\n      }];\n  }\n};\n\n/**\n* Geocode\n* @param <string>   value    Value to geocode\n* @param <function> callback Callback method\n*/\nSmartyStreets.prototype.geocode = function(value, callback) {\n    var _this = this;\n\n    var params = {\n      'street': value,\n      'auth-id': this.auth_id,\n      'auth-token': this.auth_token,\n      'format': 'json'\n    };\n\n    this.httpAdapter.get(this._endpoint,params,function(err, result){\n      if(err) {\n        return callback(err);\n      } else {\n        var results = [];\n\n        result.forEach(function(result) {\n          results.push(_this._formatResult(result));\n        });\n\n        results.raw = result;\n        callback(false, results);\n      }\n    });\n};\n\nmodule.exports = SmartyStreets;\n"]},"metadata":{},"sourceType":"script"}