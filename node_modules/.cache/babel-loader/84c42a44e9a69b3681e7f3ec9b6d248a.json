{"ast":null,"code":"var querystring = require('querystring'),\n    util = require('util'),\n    AbstractGeocoder = require('./abstractgeocoder');\n/**\n * Constructor\n */\n\n\nvar GeocodioGeocoder = function GeocodioGeocoder(httpAdapter, apiKey) {\n  GeocodioGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n  this._endpoint = 'https://api.geocod.io/v1';\n};\n\nutil.inherits(GeocodioGeocoder, AbstractGeocoder);\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\n\nGeocodioGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n\n  this.httpAdapter.get(this._endpoint + '/geocode', {\n    'q': value,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (result.error) {\n      return callback(new Error('Status is ' + result.error), {\n        raw: result\n      });\n    }\n\n    var results = [];\n    var locations = result.results;\n\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n\n    results.raw = result;\n    callback(false, results);\n  });\n};\n\nGeocodioGeocoder.prototype._formatResult = function (result) {\n  var accuracy = result.accuracy < 1 ? result.accuracy - 0.1 : 1;\n  return {\n    'latitude': result.location.lat,\n    'longitude': result.location.lng,\n    'country': null,\n    'city': result.address_components.city,\n    'state': result.address_components.state,\n    'zipcode': result.address_components.zip,\n    'streetName': result.address_components.formatted_street,\n    'streetNumber': result.address_components.number,\n    'countryCode': null,\n    'extra': {\n      confidence: accuracy || 0\n    }\n  };\n};\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\n\n\nGeocodioGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'q': lat + ',' + lng,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    var results = [];\n    var locations = result.results;\n\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n\n    results.raw = result;\n    callback(false, results);\n  });\n};\n\nmodule.exports = GeocodioGeocoder;","map":{"version":3,"sources":["C:/Users/nmtuc/Desktop/Dev/web/localsonly/frontend/node_modules/node-geocoder/lib/geocoder/geocodiogeocoder.js"],"names":["querystring","require","util","AbstractGeocoder","GeocodioGeocoder","httpAdapter","apiKey","super_","call","Error","constructor","name","_endpoint","inherits","prototype","_geocode","value","callback","_this","get","unescape","err","result","error","raw","results","locations","i","length","push","_formatResult","accuracy","location","lat","lng","address_components","city","state","zip","formatted_street","number","confidence","_reverse","query","lon","module","exports"],"mappings":"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","sourcesContent":["var querystring = require('querystring'),\n  util = require('util'),\n  AbstractGeocoder = require('./abstractgeocoder');\n\n/**\n * Constructor\n */\nvar GeocodioGeocoder = function GeocodioGeocoder(httpAdapter, apiKey) {\n\n  GeocodioGeocoder.super_.call(this, httpAdapter);\n\n  if (!apiKey || apiKey == 'undefined') {\n\n    throw new Error(this.constructor.name + ' needs an apiKey');\n  }\n\n  this.apiKey = apiKey;\n  this._endpoint = 'https://api.geocod.io/v1';\n};\n\nutil.inherits(GeocodioGeocoder, AbstractGeocoder);\n\n/**\n * Geocode\n * @param <string>   value    Value to geocode (Address)\n * @param <function> callback Callback method\n */\nGeocodioGeocoder.prototype._geocode = function (value, callback) {\n  var _this = this;\n  this.httpAdapter.get(this._endpoint + '/geocode', {\n    'q': value,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    if (result.error) {\n      return callback(new Error('Status is ' + result.error), {raw: result});\n    }\n\n    var results = [];\n\n    var locations = result.results;\n\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n\n    results.raw = result;\n    callback(false, results);\n  });\n};\n\nGeocodioGeocoder.prototype._formatResult = function (result) {\n  var accuracy = (result.accuracy < 1) ? result.accuracy - 0.1 : 1;\n  return {\n    'latitude': result.location.lat,\n    'longitude': result.location.lng,\n    'country': null,\n    'city': result.address_components.city,\n    'state': result.address_components.state,\n    'zipcode': result.address_components.zip,\n    'streetName': result.address_components.formatted_street,\n    'streetNumber': result.address_components.number,\n    'countryCode': null,\n    'extra': {\n      confidence: accuracy || 0\n    }\n  };\n};\n\n/**\n * Reverse geocoding\n * @param {lat:<number>,lon:<number>}  lat: Latitude, lon: Longitude\n * @param <function> callback Callback method\n */\nGeocodioGeocoder.prototype._reverse = function (query, callback) {\n  var lat = query.lat;\n  var lng = query.lon;\n\n  var _this = this;\n\n  this.httpAdapter.get(this._endpoint + '/reverse', {\n    'q': lat + ',' + lng,\n    'api_key': querystring.unescape(this.apiKey)\n  }, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n\n    var results = [];\n    var locations = result.results;\n\n    for (var i = 0; i < locations.length; i++) {\n      results.push(_this._formatResult(locations[i]));\n    }\n\n    results.raw = result;\n    callback(false, results);\n  });\n};\n\nmodule.exports = GeocodioGeocoder;\n"]},"metadata":{},"sourceType":"script"}