{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nmtuc\\\\Desktop\\\\Dev\\\\web\\\\localsonly\\\\frontend\\\\src\\\\Pages\\\\Results.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { DB } from '../globals';\nimport ResultsCard from '../Components/ResultsCard';\nimport './results.scss';\nimport queryString from 'query-string';\nimport { css } from \"@emotion/core\";\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\"; // const override = css`\n//   display: block;\n//   margin: 0 auto;\n//   border-color: red;\n//   padding-top: 2em;\n// `;\n\nexport default class Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      what: '',\n      where: '',\n      items: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    let values = queryString.parse(this.props.location.search);\n    console.log(values);\n    this.setState({\n      what: values.what,\n      where: values.where\n    });\n    this.getData();\n  }\n\n  componentDidUpdate() {\n    let values = queryString.parse(this.props.location.search);\n    console.log(values);\n\n    if (this.state.what !== values.what || this.state.where !== values.where) {\n      this.setState({\n        what: values.what,\n        where: values.where,\n        loading: true\n      });\n      window.location.reload();\n    }\n  }\n\n  getData() {\n    // if(!this.state.isLoaded){\n    axios.get(`${DB}locals`).then(res => {\n      console.log(\"Postal courier has delivered your package!\");\n      const data = res.data;\n      this.setState({\n        items: data,\n        loading: false\n      });\n    }).catch(() => {\n      console.log(\"Postal courier has vanished!\");\n    }); // }\n  }\n\n  displayItems(posts) {\n    if (!posts.length) return null;\n    return posts.map((post, index) => /*#__PURE__*/React.createElement(ResultsCard, {\n      index: index,\n      name: post.name,\n      description: post.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }));\n  }\n  /* <div className=\"results\">\r\n  <div className=\"items\">{this.displayItems(this.state.items)}</div>\r\n  </div> */\n  // {!this.state.isLoaded ? <div class=\"loader-inner ball-pulse\"></div> \n  //             : this.displayItems(this.state.items)}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ClimbingBoxLoader, {\n      size: 50,\n      color: \"#000000\",\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })), this.displayItems(this.state.items));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nmtuc/Desktop/Dev/web/localsonly/frontend/src/Pages/Results.jsx"],"names":["React","Component","axios","DB","ResultsCard","queryString","css","ClimbingBoxLoader","Results","constructor","props","state","what","where","items","loading","componentDidMount","values","parse","location","search","console","log","setState","getData","componentDidUpdate","window","reload","get","then","res","data","catch","displayItems","posts","length","map","post","index","name","description","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport {DB} from '../globals';\r\nimport ResultsCard from '../Components/ResultsCard';\r\nimport './results.scss';\r\nimport queryString from 'query-string';\r\nimport { css } from \"@emotion/core\";\r\nimport ClimbingBoxLoader\r\nfrom \"react-spinners/ClimbingBoxLoader\";\r\n\r\n// const override = css`\r\n//   display: block;\r\n//   margin: 0 auto;\r\n//   border-color: red;\r\n//   padding-top: 2em;\r\n// `;\r\nexport default class Results extends Component {\r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.state = {\r\n            what: '',\r\n            where: '',\r\n            items: [],\r\n            loading: true,\r\n            \r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        let values = queryString.parse(this.props.location.search);\r\n        console.log(values);\r\n        \r\n        this.setState({ \r\n                what:values.what,\r\n                where:values.where \r\n            }\r\n        )\r\n        \r\n        this.getData();\r\n        \r\n    }\r\n    componentDidUpdate(){\r\n        let values = queryString.parse(this.props.location.search);\r\n        console.log(values);\r\n        if(this.state.what !== values.what || this.state.where !== values.where){\r\n            this.setState({ \r\n                    what:values.what,\r\n                    where:values.where,\r\n                    loading:true\r\n                }\r\n            )\r\n            window.location.reload();\r\n        }\r\n    }\r\n    getData(){\r\n        // if(!this.state.isLoaded){\r\n            axios.get(`${DB}locals`)\r\n            .then((res)=>{\r\n                    console.log(\"Postal courier has delivered your package!\");\r\n                    const data = res.data;\r\n                    this.setState({ items:data, loading: false });\r\n                }\r\n            )\r\n            .catch(()=>{console.log(\"Postal courier has vanished!\");});\r\n        // }\r\n    }\r\n    displayItems(posts){\r\n        if(!posts.length) return null;\r\n        return posts.map((post, index)=>(\r\n            <ResultsCard \r\n                index={index}\r\n                name={post.name} \r\n                description={post.description}\r\n                \r\n                />\r\n        ));\r\n    }\r\n    \r\n    /* <div className=\"results\">\r\n    <div className=\"items\">{this.displayItems(this.state.items)}</div>\r\n    </div> */\r\n    // {!this.state.isLoaded ? <div class=\"loader-inner ball-pulse\"></div> \r\n    //             : this.displayItems(this.state.items)}\r\n    render() {\r\n        \r\n        return (\r\n            \r\n            <div className=\"results\">\r\n                <div className=\"loading\">\r\n                    <ClimbingBoxLoader\r\n                        size={50}\r\n                        color={\"#000000\"}\r\n                        loading={this.state.loading}\r\n                    />\r\n                </div>\r\n                {this.displayItems(this.state.items)}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}